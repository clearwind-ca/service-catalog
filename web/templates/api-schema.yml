openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/source/:
    get:
      operationId: listSources
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Source'
          description: ''
      tags:
      - api
    post:
      operationId: createSource
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Source'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Source'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ''
      tags:
      - api
  /api/source/{id}/:
    get:
      operationId: retrieveSource
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this source.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ''
      tags:
      - api
    put:
      operationId: updateSource
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this source.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Source'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Source'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSource
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this source.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Source'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Source'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySource
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this source.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/service/:
    get:
      operationId: listServices
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
          description: ''
      tags:
      - api
  /api/service/{id}/:
    get:
      operationId: retrieveService
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this service.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyService
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this service.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/services/schema/:
    get:
      operationId: listapi_schema_details
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/check/:
    get:
      operationId: listChecks
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Check'
          description: ''
      tags:
      - api
    post:
      operationId: createCheck
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Check'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Check'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Check'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Check'
          description: ''
      tags:
      - api
  /api/check/{id}/:
    get:
      operationId: retrieveCheck
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this check.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Check'
          description: ''
      tags:
      - api
    put:
      operationId: updateCheck
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this check.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Check'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Check'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Check'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Check'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCheck
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this check.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Check'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Check'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Check'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Check'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCheck
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this check.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/result/:
    get:
      operationId: listCheckResults
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/CheckResult'
          description: ''
      tags:
      - api
    post:
      operationId: createCheckResult
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckResult'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckResult'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CheckResult'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResult'
          description: ''
      tags:
      - api
  /api/result/{id}/:
    get:
      operationId: retrieveCheckResult
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this check result.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResult'
          description: ''
      tags:
      - api
    put:
      operationId: updateCheckResult
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this check result.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckResult'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckResult'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CheckResult'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResult'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCheckResult
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this check result.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckResult'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckResult'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CheckResult'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResult'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCheckResult
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this check result.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/logs/:
    get:
      operationId: listLogEntrys
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/LogEntry'
          description: ''
      tags:
      - api
  /api/logs/{id}/:
    get:
      operationId: retrieveLogEntry
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this log entry.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogEntry'
          description: ''
      tags:
      - api
  /api/sources/{id}/refresh/:
    post:
      operationId: createapi_source_refresh
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/sources/{id}/validate/:
    post:
      operationId: createapi_source_validate
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/health/{id}/run/:
    post:
      operationId: createapi_checks_run
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    Source:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          maxLength: 100
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - url
    Service:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        path:
          type: string
          maxLength: 255
        type:
          type: string
          maxLength: 100
        priority:
          type: integer
          maximum: 10
          minimum: 1
        active:
          type: boolean
        meta:
          type: object
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        source:
          type: integer
        dependencies:
          type: array
          items:
            type: integer
      required:
      - name
      - slug
      - description
      - path
      - type
      - source
    Check:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          description: Markdown is supported.
        frequency:
          enum:
          - hourly
          - daily
          - weekly
          - ad-hoc
          type: string
          description: How often this check will be run.
        active:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
    CheckResult:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        result:
          enum:
          - pass
          - warning
          - fail
          - error
          - unknown
          type: string
        message:
          type: string
        status:
          enum:
          - sent
          - timed-out
          - error
          - completed
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        service:
          type: integer
        health_check:
          type: integer
      required:
      - service
      - health_check
    LogEntry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        object_pk:
          type: string
          maxLength: 255
        object_id:
          type: integer
          nullable: true
        object_repr:
          type: string
        serialized_data:
          type: object
          nullable: true
        action:
          enum:
          - 0
          - 1
          - 2
          - 3
          type: integer
        changes:
          type: string
        remote_addr:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        additional_data:
          type: object
          nullable: true
        content_type:
          type: integer
        actor:
          type: integer
          nullable: true
      required:
      - object_pk
      - object_repr
      - action
      - content_type
